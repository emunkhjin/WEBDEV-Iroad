{"version":3,"sources":["components/Widget/index.js","components/Metrics/IconWithTextCard.js","routes/SamplePage/Monitoring1.js","routes/SamplePage/Monitoring2.js","routes/SamplePage/Monitoring3.js","routes/SamplePage/Monitoring4.js","routes/SamplePage/index.js","routes/SamplePage/slider.js"],"names":["Widget","_ref","title","children","styleName","cover","extra","actions","react_default","a","createElement","card","className","concat","defaultProps","connect","themeType","settings","props","icon","subTitle","iconColor","THEME_TYPE_DARK","components_Widget","style","fontSize","Monitoring1","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","showSkeleton","setState","setTimeout","onCollectionUpdate","querySnapshot","Evdrel","forEach","doc","_doc$data","data","bairshil","email","photo","text","latitude","longtitude","date","push","key","id","ref","firebase","collection","orderBy","unsubscribe","onSnapshot","col","xl","lg","md","sm","xs","skeleton","avatar","active","Metrics_IconWithTextCard","length","Component","Users","where","SamplePage","Input","Search","user","currentUser","displayName","photoURL","emailVerified","uid","cat","_this2","row","wrap","Monitoring1_Monitoring1","Monitoring2_Monitoring1","Monitoring3_Monitoring1","Monitoring4_Monitoring1","map","board","src","alt","tag","color","Date","seconds","toLocaleDateString","href"],"mappings":"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","file":"static/js/5.dee8b964.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Widget = ({title, children, styleName, cover, extra, actions}) => {\r\n\r\n  return (\r\n    <Card title={title} actions={actions} cover={cover} className={`gx-card-widget ${styleName}`} extra={extra}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Widget;\r\nWidget.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n  cover: PropTypes.node,\r\n  actions: PropTypes.node,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { THEME_TYPE_DARK } from \"../../constants/ThemeSetting\";\r\n\r\nconst IconWithTextCard = props => {\r\n  const { icon, title, subTitle } = props;\r\n  let { iconColor } = props;\r\n  if (props.themeType === THEME_TYPE_DARK) {\r\n    iconColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <Widget>\r\n      <div className=\"gx-media gx-align-items-center gx-flex-nowrap\">\r\n        <div className=\"gx-mr-lg-4 gx-mr-3\">\r\n          <i\r\n            className={`icon icon-${icon} gx-fs-xlxl gx-text-${iconColor} gx-d-flex`}\r\n            style={{ fontSize: 45 }}\r\n          />\r\n        </div>\r\n        <div className=\"gx-media-body\">\r\n          <h1 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1\">{title}</h1>\r\n          <p className=\"gx-text-grey gx-mb-0\">{subTitle}</p>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { themeType } = settings;\r\n  return { themeType };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(IconWithTextCard);\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Col, Row, Skeleton } from \"antd\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nimport IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\nimport ChartCard from \"components/Metrics/ChartCard\";\r\nimport GrowthCard from \"components/Metrics/GrowthCard\";\r\nimport EcommerceStatus from \"components/Metrics/EcommerceStatus\";\r\nimport TrafficRaiseCard from \"components/Metrics/TrafficRaiseCard\";\r\n// import TotalEncomeCard from \"components/Metrics/TotalEncomeCard\";\r\nimport QueriesCard from \"components/Metrics/QueriesCard\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nexport default class Monitoring1 extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  showSkeleton = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 1500);\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase\r\n      .firestore()\r\n      .collection(\"Evdrel\")\r\n      .orderBy(\"date\", \"desc\");\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Evdrel: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Evdrel = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      } = doc.data();\r\n      Evdrel.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      });\r\n    });\r\n    this.setState({\r\n      Evdrel\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    this.showSkeleton();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n        <Skeleton avatar loading={this.state.loading} active>\r\n          <IconWithTextCard\r\n            icon=\"files\"\r\n            iconColor=\"green\"\r\n            title={this.state.Evdrel.length}\r\n            subTitle=\"Нийт мэдээлэл\"\r\n          />\r\n        </Skeleton>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Col, Row, Skeleton } from \"antd\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nimport IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\nimport ChartCard from \"components/Metrics/ChartCard\";\r\nimport GrowthCard from \"components/Metrics/GrowthCard\";\r\nimport EcommerceStatus from \"components/Metrics/EcommerceStatus\";\r\nimport TrafficRaiseCard from \"components/Metrics/TrafficRaiseCard\";\r\n// import TotalEncomeCard from \"components/Metrics/TotalEncomeCard\";\r\nimport QueriesCard from \"components/Metrics/QueriesCard\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nexport default class Monitoring1 extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  showSkeleton = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 1500);\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase.firestore().collection(\"users\");\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Users: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Users = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      } = doc.data();\r\n      Users.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      });\r\n    });\r\n    this.setState({\r\n      Users\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    this.showSkeleton();\r\n  }\r\n  render() {\r\n    return (\r\n      <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n        {\" \"}\r\n        <Skeleton avatar loading={this.state.loading} active>\r\n          <IconWithTextCard\r\n            icon=\"user\"\r\n            iconColor=\"green\"\r\n            title={this.state.Users.length}\r\n            subTitle=\"Нийт хэрэглэгчид\"\r\n          />\r\n        </Skeleton>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Col, Row, Skeleton } from \"antd\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nimport IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\nimport ChartCard from \"components/Metrics/ChartCard\";\r\nimport GrowthCard from \"components/Metrics/GrowthCard\";\r\nimport EcommerceStatus from \"components/Metrics/EcommerceStatus\";\r\nimport TrafficRaiseCard from \"components/Metrics/TrafficRaiseCard\";\r\n// import TotalEncomeCard from \"components/Metrics/TotalEncomeCard\";\r\nimport QueriesCard from \"components/Metrics/QueriesCard\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nexport default class Monitoring1 extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  showSkeleton = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 1500);\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase\r\n      .firestore()\r\n      .collection(\"Evdrel\")\r\n      .where(\"complete\", \"==\", true);\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Users: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Users = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      } = doc.data();\r\n      Users.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      });\r\n    });\r\n    this.setState({\r\n      Users\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    this.showSkeleton();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n        {\" \"}\r\n        <Skeleton avatar loading={this.state.loading} active>\r\n          <IconWithTextCard\r\n            icon=\"list-select-o\"\r\n            iconColor=\"green\"\r\n            title={this.state.Users.length}\r\n            subTitle=\"Нийт шийдэгдсэн мэдээлэл\"\r\n          />\r\n        </Skeleton>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Col, Row, Skeleton } from \"antd\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nimport IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\nimport ChartCard from \"components/Metrics/ChartCard\";\r\nimport GrowthCard from \"components/Metrics/GrowthCard\";\r\nimport EcommerceStatus from \"components/Metrics/EcommerceStatus\";\r\nimport TrafficRaiseCard from \"components/Metrics/TrafficRaiseCard\";\r\n// import TotalEncomeCard from \"components/Metrics/TotalEncomeCard\";\r\nimport QueriesCard from \"components/Metrics/QueriesCard\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nexport default class Monitoring1 extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  showSkeleton = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 1500);\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase\r\n      .firestore()\r\n      .collection(\"Evdrel\")\r\n      .where(\"complete\", \"==\", false);\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Users: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Users = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      } = doc.data();\r\n      Users.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date\r\n      });\r\n    });\r\n    this.setState({\r\n      Users\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    this.showSkeleton();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xl={6} lg={12} md={12} sm={12} xs={12} className=\"gx-col-full\">\r\n        {\" \"}\r\n        <Skeleton avatar loading={this.state.loading} active>\r\n          <IconWithTextCard\r\n            icon=\"tasks\"\r\n            iconColor=\"green\"\r\n            title={this.state.Users.length}\r\n            subTitle=\"Нийт шийдэгдээгүй мэдээлэл\"\r\n          />\r\n        </Skeleton>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Tag, Card, Col, Row, Skeleton, Button, Carousel, Input } from \"antd\";\r\nimport { TEXT } from \"react-dnd-html5-backend/lib/NativeTypes\";\r\nimport Monitoring1 from \"./Monitoring1\";\r\nimport Monitoring2 from \"./Monitoring2\";\r\nimport Monitoring3 from \"./Monitoring3\";\r\nimport Monitoring4 from \"./Monitoring4\";\r\nimport SliderJSS from \"./slider\";\r\nconst Search = Input.Search;\r\nclass SamplePage extends Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  showSkeleton = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 1500);\r\n  };\r\n  constructor(props) {\r\n    var user = firebase.auth().currentUser;\r\n    var name, email, photoUrl, uid, emailVerified;\r\n\r\n    if (user != null) {\r\n      name = user.displayName;\r\n      email = user.email;\r\n      photoUrl = user.photoURL;\r\n      emailVerified = user.emailVerified;\r\n      uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\r\n      // this value to authenticate with your backend server, if\r\n      // you have one. Use User.getToken() instead.\r\n    }\r\n    super(props);\r\n    this.ref = firebase\r\n      .firestore()\r\n      .collection(\"Evdrel\")\r\n      .orderBy(\"date\", \"desc\");\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Evdrel: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Evdrel = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date,\r\n        cat\r\n      } = doc.data();\r\n\r\n      Evdrel.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date,\r\n\r\n        cat\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      Evdrel\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    // const script = document.createElement(\"script\");\r\n    // script.src = \"/js/light.js\";\r\n    // script.async = true;\r\n    // document.body.appendChild(script);\r\n    this.showSkeleton();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gx-main-content-wrapper\">\r\n        <Row wrap>\r\n          <Monitoring1 />\r\n          <Monitoring2 />\r\n          <Monitoring3 />\r\n          <Monitoring4 />\r\n        </Row>\r\n\r\n        {/* <SliderJSS /> */}\r\n        {/* <div>\r\n          <Card className=\"gx-card\" title=\"Search Box\">\r\n            <Search\r\n              placeholder=\"input search text\"\r\n              onSearch={value => console.log(value)}\r\n              style={{ width: 200 }}\r\n              size=\"large\"\r\n            />\r\n          </Card>\r\n        </div> */}\r\n\r\n        <div className=\"gx-main-content gx-pb-sm-4\">\r\n          <div className=\"ant-row\">\r\n            <div className=\"ant-col ant-col-24\">\r\n              {this.state.Evdrel.map(board => (\r\n                <div className=\"gx-user-list gx-card-list\">\r\n                  <Skeleton avatar loading={this.state.loading} active>\r\n                    <div className=\"gx-featured-thumb\">\r\n                      <img\r\n                        className=\"gx-rounded-lg gx-width-175\"\r\n                        src={board.photo}\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"gx-media-body gx-featured-content\">\r\n                      <div className=\"gx-featured-content-left\">\r\n                        <Tag className=\"gx-rounded-xs\" color=\"#06BB8A\">\r\n                          {board.cat}\r\n                        </Tag>\r\n                        <h3 className=\"gx-mb-2\">{board.text}</h3>\r\n                        <div className=\"ant-row-flex\">\r\n                          <p className=\"gx-mr-3 gx-mb-1\">\r\n                            <span className=\"gx-text-grey\">Longtitude:</span>{\" \"}\r\n                            {board.longtitude}\r\n                          </p>\r\n                          <p className=\"gx-mr-3 gx-mb-1\">\r\n                            <span className=\"gx-text-grey\">Latitude:</span>{\" \"}\r\n                            {board.latitude}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"ant-row-flex\">\r\n                          <p className=\"gx-text-grey gx-mb-1\">\r\n                            <i\r\n                              className={`icon icon-user gx-fs-xs gx-mr-2 gx-d-inline-flex gx-vertical-align-middle`}\r\n                            />\r\n                            {board.email} \r\n                          </p>\r\n                          <p className=\"gx-text-grey gx-ml-4 gx-mb-1\">\r\n                            <i\r\n                              className={`icon icon-datepicker gx-fs-xs gx-mr-2 gx-d-inline-flex gx-vertical-align-middle`}\r\n                            />\r\n                            {new Date(\r\n                              board.date.seconds * 1000\r\n                            ).toLocaleDateString(\"en-US\")}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"gx-featured-content-right\">\r\n                        <div>\r\n                          <a\r\n                            href={`https://www.google.com/maps/place/${\r\n                              board.latitude\r\n                            },${board.longtitude}`}\r\n                            className=\"gx-text-grey gx-fs-sm\"\r\n                          >\r\n                            Байршлийг GoogleMaps дээр харах\r\n                          </a>\r\n                        </div>\r\n                        <a\r\n                          href={`/show/${board.key}`}\r\n                          className=\"gx-text-primary gx-text-truncate gx-mt-auto gx-mb-0 gx-pointer\"\r\n                        >\r\n                          Дэлгэрэнгүй\r\n                          <i\r\n                            className={`icon icon-long-arrow-right gx-fs-xxl gx-ml-2 gx-d-inline-flex gx-vertical-align-middle`}\r\n                          />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </Skeleton>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// export default App;\r\nexport default SamplePage;\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { Col, Row, Skeleton, Carousel, Card } from \"antd\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\n// import IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\n// import ChartCard from \"components/Metrics/ChartCard\";\r\n// import GrowthCard from \"components/Metrics/GrowthCard\";\r\n// import EcommerceStatus from \"components/Metrics/EcommerceStatus\";\r\n// import TrafficRaiseCard from \"components/Metrics/TrafficRaiseCard\";\r\n// // import TotalEncomeCard from \"components/Metrics/TotalEncomeCard\";\r\n// import QueriesCard from \"components/Metrics/QueriesCard\";\r\n// import Auxiliary from \"util/Auxiliary\";\r\n\r\nexport default class SliderJSS extends Component {\r\n  constructor(props) {\r\n    var user = firebase.auth().currentUser;\r\n    var name, email, photoUrl, uid, emailVerified;\r\n\r\n    if (user != null) {\r\n      name = user.displayName;\r\n      email = user.email;\r\n      photoUrl = user.photoURL;\r\n      emailVerified = user.emailVerified;\r\n      uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\r\n      // this value to authenticate with your backend server, if\r\n      // you have one. Use User.getToken() instead.\r\n    }\r\n    super(props);\r\n    this.ref = firebase\r\n      .firestore()\r\n      .collection(\"Evdrel\")\r\n      .orderBy(\"date\", \"desc\")\r\n      .where(\"cat\", \"==\", \"Чингэлтэй дүүрэг\")\r\n      .limit(3);\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      Evdrel: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = querySnapshot => {\r\n    const Evdrel = [];\r\n    querySnapshot.forEach(doc => {\r\n      const {\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date,\r\n        cat\r\n      } = doc.data();\r\n\r\n      Evdrel.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        bairshil,\r\n        email,\r\n        photo,\r\n        text,\r\n        latitude,\r\n        longtitude,\r\n        date,\r\n\r\n        cat\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      Evdrel\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    // const script = document.createElement(\"script\");\r\n    // script.src = \"/js/light.js\";\r\n    // script.async = true;\r\n    // document.body.appendChild(script);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ant-col ant-col-24\">\r\n        <Col span={12}>\r\n          <Carousel autoplay effect=\"fade\">\r\n            {this.state.Evdrel.map(board => (\r\n              <div className=\"ant-card ant-card-bordered ant-card-type-inner \">\r\n                <div className=\"ant-card-head\">\r\n                  <div className=\"ant-card-head-wrapper\">\r\n                    <div className=\"ant-card-head-title\">\r\n                      {board.text},{board.cat},\r\n                      {new Date(board.date.seconds * 1000).toLocaleDateString(\r\n                        \"en-US\"\r\n                      )}{\" \"}\r\n                      -{\" \"}\r\n                      {new Date(board.date.seconds * 1000).toLocaleTimeString(\r\n                        \"en-US\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}{\" \"}\r\n          </Carousel>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}